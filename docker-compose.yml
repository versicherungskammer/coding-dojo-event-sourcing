version: "3.3"

services:
  zookeeper:
    image: "${REPO:-docker.io}/bitnami/zookeeper:3"
    ports:
      - "2181:2181"
    volumes:
      - "zookeeper_data:/bitnami"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
  kafka:
    image: "${REPO:-docker.io}/bitnami/kafka:2-debian-10"

    ports:
      - "9092:9092"
      - "9093:9093"
    volumes:
      - "kafka_data:/bitnami"
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9093,EXTERNAL://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9093,EXTERNAL://localhost:9092
      - KAFKA_INTER_BROKER_LISTENER_NAME=CLIENT
    depends_on:
      - zookeeper
  topics-init:
    build:
      context: ./topics-init
      args:
        DOCKER_REPO: ${REPO:-docker.io}
    depends_on:
      - kafka
    restart: on-failure
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9093
  facility-management:
    build:
      context: ./mock-facility-management
      args:
        DOCKER_REPO: ${REPO:-docker.io}
    ports:
      - "8081:8080"
    depends_on:
      - topics-init
    restart: on-failure
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9093

volumes:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local
